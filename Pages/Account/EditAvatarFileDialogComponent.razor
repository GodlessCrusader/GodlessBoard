@using GodlessBoard.Data
@using GodlessBoard.Models
@using GodlessBoard.Services
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using System.Net.Http.Headers
@inject IConfiguration Configuration
@inject MyDbContext _context
@inject IHttpContextAccessor HttpContextAcessor
@inject HttpClient client
@page "/"
<form>
    <label>Profile picture</label>
    <InputFile />
    <button @onclick="ChangeButtonText" class="btn btn-submit">Change profile picture</button>
    <span class="text-dngr">@SpanText</span>
</form>
<label>@exception</label>
<button @onclick="@ChangeButtonText">@buttonText</button>
@code {
    [Parameter]
    public User? CurrentUser { get; set; }
    public string SpanText { get; set; } = string.Empty;
    string exception = string.Empty;
    public string buttonText { get; set; } = "buttonText";
    private void ChangeButtonText()
    {
        buttonText = "sas";
    }
    private async Task UploadImage(InputFileChangeEventArgs e)
    {/*
    var imageContent = new StreamContent(e.File.OpenReadStream());
    imageContent.Headers.ContentLength = e.File.Size;
    imageContent.Headers.ContentType = new MediaTypeHeaderValue(e.File.ContentType);
    imageContent.Headers.ContentEncoding.Add("UTF-8");
    try
    {
        await client.PostAsync("https://localhost:7119/MediaUpload", imageContent);
    }
    catch (Exception ex)
    {
        exception = ex.ToString();
    }
       */

    
       if(!e.File.ContentType.Contains("image") || CurrentUser == null)
       {
           SpanText = "Wrong file type";
           return;
       }
       else if( CurrentUser == null)
       {
           SpanText = "Authorization error. Please log in or sign up a new account";
           return;
       }
       else if(CurrentUser.MaxMediaWeight - CurrentUser.CurrentMediaWeight < e.File.Size)
       {
           SpanText = "Media storage size limitation reached";
           return;
       }
       else
       {
            var mediaName = System.IO.Path.GetRandomFileName + Path.GetExtension(e.File.Name);
            CurrentUser.Medias.Add(new Media(){
                Name = mediaName,
                Type = MediaType.Image,
                Owner = CurrentUser
           }

            );
            var imageUploadPath = @"~\MediaFiles\Images\" + mediaName;
            var fs = new FileStream( imageUploadPath ,FileMode.Create);
            await e.File.OpenReadStream().CopyToAsync(fs);
       }
        
    }
}
