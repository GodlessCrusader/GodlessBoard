@using GodlessBoard.Data
@using GodlessBoard.Models
@using GodlessBoard.Services
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using System.Net.Http.Headers
@inject IConfiguration Configuration
@inject MyDbContext _context
@inject IHttpContextAccessor HttpContextAcessor
@inject IWebHostEnvironment _env
@inject HttpClient client

<form>
    <label>Profile picture</label>
    <img src="@(imgUrl)" height="100" width="100">
    <InputFile OnChange="UploadImage" />
    <button @onclick="ChangeButtonText">Change profile picture</button>
    <span class="text-dngr">@SpanText</span>
</form>
<label>@exception</label>
<button @onclick="@ChangeButtonText">@buttonText</button>
@code {
    [Parameter]
    public User? CurrentUser { get; set; }
    [Parameter]
    public string imgUrl { get; set; }
    public string SpanText { get; set; } = string.Empty;
    string exception = string.Empty;
    public string buttonText { get; set; } = "buttonText";
    private void ChangeButtonText()
    {
        buttonText = "sas";
    }
    private async Task UploadImage(InputFileChangeEventArgs e)
    {
        if(!e.File.ContentType.Contains("image") || CurrentUser == null)
        {
            SpanText = "Wrong file type";
            return;
        }else if( CurrentUser == null)
        {
            SpanText = "Authorization error. Please log in or sign up a new account";
            return;
        }else if(CurrentUser.MaxMediaWeight - CurrentUser.CurrentMediaWeight < (ulong)e.File.Size)
        {
            SpanText = "Media storage size limitation reached";
            return;
        }else
        {
            byte[] bytes;
            using(var ms = new MemoryStream())
            {
                var istream = e.File.OpenReadStream();
                await istream.CopyToAsync(ms);
                bytes = ms.ToArray();
                istream.Close();
                istream.Dispose();
            }


            imgUrl = MediaUploadRouter.UploadMedia(bytes, CurrentUser.UserName, e.File.Name, _env.WebRootPath).Result;



            if(!string.IsNullOrEmpty(imgUrl))
            {
                var media = new Media()
                {
                    UserDisplayName = e.File.Name ,
                    Name = imgUrl,
                    Type = MediaType.Image,
                    Owner = _context.Users.Where(x => x.Id == CurrentUser.Id).Single(),
                    Weight = e.File.Size
                };

                _context.Users.Where(x => x.Id == CurrentUser.Id).Single().ProfilePicUrl = $"{media.Name}";
                _context.Users.Where(x => x.Id == CurrentUser.Id).Single().CurrentMediaWeight += (ulong)e.File.Size;
                _context.Media.Add(media);
                _context.SaveChanges();
                
            }
            else
            {
                SpanText = "This image already exists";
            }

            
        }
        
    }
}
