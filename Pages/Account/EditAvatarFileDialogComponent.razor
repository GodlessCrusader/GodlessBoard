@using GodlessBoard.Data
@using GodlessBoard.Models
@using GodlessBoard.Services
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using System.Net.Http.Headers
@inject IConfiguration Configuration
@inject MyDbContext _context
@inject IHttpContextAccessor HttpContextAcessor
@inject IWebHostEnvironment _env
@inject HttpClient client

<form>
    <label>Profile picture</label>
    <img src="@(imgUrl)" height="100" width="100">
    <InputFile OnChange="UploadImageAsync" />
    <button @onclick="ChangeUserAvatarAsync">Change profile picture</button>
    <span class="text-dngr">@SpanText</span>
</form>
@code {
    [Parameter]
    public User? CurrentUser { get; set; }
    [Parameter]
    public string imgUrl { get; set; }
    public string SpanText { get; set; } = string.Empty;
    Media Avatar;
    IBrowserFile Image;

    private async Task ChangeUserAvatarAsync()
    {
        if (Avatar != null && Image != null)
        {

            await DownloadImageAsync();

            _context.Users.Where(x => x.Id == CurrentUser.Id).Single().ProfilePicUrl = $"{Avatar.Name}";

            _context.SaveChanges();

        }
        else
        {
            SpanText = "Please select target image";
        }


    }

    private async Task DownloadImageAsync()
    {
        byte[] bytes;
        using (var ms = new MemoryStream())
        {
            var istream = Image.OpenReadStream();
            await istream.CopyToAsync(ms);
            bytes = ms.ToArray();
            istream.Close();
            istream.Dispose();
        }

        Avatar = MediaUploadRouter.UploadMediaAsync(
            bytes,
            CurrentUser.UserName,
            Image.Name,
            _env.WebRootPath,
            Configuration.GetSection("AppSettings:Key").Value).Result;

        if (MediaUploadRouter.CheckExistance(bytes,
            CurrentUser.UserName,
            Image.Name,
            _env.WebRootPath,
            Configuration.GetSection("AppSettings:Key").Value))
            {
                SpanText = "This image already exists in your library";
                return;
            }
            

        _context.Users.Where(x => x.Id == CurrentUser.Id).Single().CurrentMediaWeight += (ulong)Image.Size;
        _context.Media.Add(Avatar);
        _context.SaveChanges();
    }

    private async Task UploadImageAsync(InputFileChangeEventArgs e)
    {
        if(!e.File.ContentType.Contains("image") || CurrentUser == null)
        {
            SpanText = "Wrong file type";
            return;
        }else if( CurrentUser == null)
        {
            SpanText = "Authorization error. Please log in or sign up a new account";
            return;
        }else if(CurrentUser.MaxMediaWeight - CurrentUser.CurrentMediaWeight < (ulong)e.File.Size)
        {
            SpanText = "Media storage size limitation reached";
            return;
        }else
        {
            Image = e.File;
        }
        
    }
}
