@using GodlessBoard.Data
@using GodlessBoard.Models
@using GodlessBoard.Services
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Forms
@inject MyDbContext _dbContext

@inject IHttpContextAccessor _httpContextAccessor

<div id="MessageHistoryContainer">
    @{  
        foreach (var m in Game.Chat)
        {
            <label style="font:bold">@m.User.DisplayName</label>
            <br>
            <img height="50" width="50" src="@m.User.ProfilePicUrl">
            <label>@m.Text</label>
            <label>@m.RecievingTime.ToString()</label>
            <br>
        }
    }
</div>
<EditForm Model="SentMessageText">
    <InputText @bind-Value="SentMessageText"/>
    <button @onclick = "SendMessageAsync" class="btn btn-outline-primary">Send</button>
</EditForm>


@code {

    [Parameter]
    public Game Game { get; set; }
    public string SentMessageText { get; set; } = string.Empty;
    protected override void OnInitialized()
    {
        if(Game.Chat == null)
        {
            Game.Chat = new List<ChatMessage>() {
                new ChatMessage() { User = _dbContext.Users.Where(x => x.UserName == Auth.GetUserName(_httpContextAccessor.HttpContext.User.Identity.Name)).Single(),
                Text = "The very first message"
                } 
            };
        }
    }
    public async Task SendMessageAsync()
    {
        if (!string.IsNullOrEmpty(SentMessageText))
        {
            var currentUser = _dbContext.Users.Where(x => x.UserName == Auth.GetUserName(_httpContextAccessor.HttpContext.User.Identity.Name)).Single();
            var sentMessage = new ChatMessage() { Text = SentMessageText, Game=_dbContext.Games.SingleOrDefault(x => x.Id == Game.Id), User = currentUser, RecievingTime = DateTime.Now};
            Game.Chat.Add(sentMessage);
            await _dbContext.Messages.AddAsync(sentMessage);
            await _dbContext.SaveChangesAsync();
            SentMessageText = string.Empty;
        }
        
    }
}
